{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE RankNTypes #-}

module Hearth.Enum
  ( CardClass(..)
  , cclass
  , cclassText
  , CardSet(..)
  , cset
  , CardType(..)
  , ctype
  , ctypeText
  , Tag(..)
  , tag
  , CardReq(..)
  , req
  , CardRace(..)
  , crace
  , Rarity(..)
  , rarity
  , Zone(..)
  , zone
  , ChoiceType(..)
  , choiceType
  ) where

import NumHask.Prelude hiding (Iso, iso)
import qualified Data.HashMap.Strict as Map
import Control.Lens

twoWays
  :: (Eq a, Hashable a, Eq b, Hashable b)
  => [(a,b)] -> (a -> b) -> (b -> a) -> Iso' a b
twoWays l faila failb = iso from' to' where
  to' i = maybe (failb i) identity (Map.lookup i kva)
  from' i = maybe (faila i) identity (Map.lookup i kvb)
  kva = foldl' (\x (k,v) -> Map.insert v k x) Map.empty l
  kvb = foldl' (\x (k,v) -> Map.insert k v x) Map.empty l

-- * CardClass
data CardClass =
  Druid |
  Hunter |
  Mage |
  Neutral |
  Paladin |
  Priest |
  Rogue |
  Shaman |
  Warlock |
  Warrior |
  Dream |
  Whizbang |
  Deathknight |
  UnknownCardClass Int
  deriving (Eq, Show, Generic, Hashable)

cclass :: Iso' CardClass Int
cclass = twoWays cclasses (const 0) UnknownCardClass

cclasses :: [(CardClass,Int)]
cclasses =
      [ (Deathknight,1)
      , (Druid,2)
      , (Hunter,3)
      , (Mage,4)
      , (Paladin,5)
      , (Priest,6)
      , (Rogue,7)
      , (Shaman,8)
      , (Warlock,9)
      , (Warrior,10)
      , (Dream,11)
      , (Neutral,12)
      , (Whizbang,13)
      ]

cclassText :: Iso' CardClass Text
cclassText = twoWays cardClassTexts (const "INVALID") (const (UnknownCardClass 0))

cardClassTexts :: [(CardClass,Text)]
cardClassTexts =
  [ (Druid,"DRUID")
  , (Hunter,"HUNTER")
  , (Mage,"MAGE")
  , (Neutral,"NEUTRAL")
  , (Paladin,"PALADIN")
  , (Priest,"PRIEST")
  , (Rogue,"ROGUE")
  , (Shaman,"SHAMAN")
  , (Warlock,"WARLOCK")
  , (Warrior,"WARRIOR")
  , (Dream,"DREAM")
  , (Deathknight,"DEATHKNIGHT")
  , (Whizbang,"WHIZBANG")
  ]

-- * CardSet
data CardSet = 
  TEST_TEMPORARY |
  CORE |
  EXPERT1 |
  HOF |
  MISSIONS |
  DEMO |
  NONE |
  CHEAT |
  BLANK |
  DEBUG_SP |
  PROMO |
  NAXX |
  GVG |
  BRM |
  TGT |
  CREDITS |
  HERO_SKINS |
  TB |
  SLUSH |
  LOE |
  OG |
  OG_RESERVE |
  KARA |
  KARA_RESERVE |
  GANGS |
  GANGS_RESERVE |
  UNGORO |
  ICECROWN |
  LOOTAPALOOZA |
  GILNEAS |
  BOOMSDAY |
  UnknownCardSet Int
  deriving (Eq, Show, Generic, Hashable)

cset :: Iso' CardSet Int
cset = twoWays csets (const 0) UnknownCardSet

csets :: [(CardSet,Int)]
csets = 
      [ (TEST_TEMPORARY,1)
      , (CORE,2)
      , (EXPERT1,3)
      , (HOF,4)
      , (MISSIONS,5)
      , (DEMO,6)
      , (NONE,7)
      , (CHEAT,8)
      , (BLANK,9)
      , (DEBUG_SP,10)
      , (PROMO,11)
      , (NAXX,12)
      , (GVG,13)
      , (BRM,14)
      , (TGT,15)
      , (CREDITS,16)
      , (HERO_SKINS,17)
      , (TB,18)
      , (SLUSH,19)
      , (LOE,20)
      , (OG,21)
      , (OG_RESERVE,22)
      , (KARA,23)
      , (KARA_RESERVE,24)
      , (GANGS,25)
      , (GANGS_RESERVE,26)
      , (UNGORO,27)
      , (ICECROWN,1001)
      , (LOOTAPALOOZA,1004)
      , (GILNEAS,1125)
      , (BOOMSDAY,1127)
      ]

-- * CardType
data CardType =
  GameCard |
  PlayerCard |
  Hero |
  Minion |
  Spell |
  Enchantment |
  Weapon |
  Item |
  Token |
  HeroPower |
  UnknownCardType Int
  deriving (Eq, Show, Generic, Hashable)

ctype :: Iso' CardType Int
ctype = twoWays ctypes (const 0) UnknownCardType

ctypes :: [(CardType,Int)]
ctypes =
      [ (GameCard, 1)
      , (PlayerCard, 2)
      , (Hero, 3)
      , (Minion, 4)
      , (Spell, 5)
      , (Enchantment, 6)
      , (Weapon, 7)
      , (Item, 8)
      , (Token, 9)
      , (HeroPower, 10)
      ]

ctypeText :: Iso' CardType Text
ctypeText = twoWays ctypesText (const "INVALID") (const (UnknownCardType 0))

ctypesText :: [(CardType,Text)]
ctypesText =
      [ (GameCard, "GAME")
      , (PlayerCard, "PLAYER")
      , (Hero, "HERO")
      , (Minion, "MINION")
      , (Spell, "SPELL")
      , (Enchantment, "ENCHANTMENT")
      , (Weapon, "WEAPON")
      , (Item, "ITEM")
      , (Token, "TOKEN")
      , (HeroPower, "HERO_POWER")
      ]

-- * Tag
data Tag =
  TAG_SCRIPT_DATA_NUM_1 |
  TAG_SCRIPT_DATA_NUM_2 |
  TAG_SCRIPT_DATA_ENT_1 |
  TAG_SCRIPT_DATA_ENT_2 |
  MISSION_EVENT |
  TIMEOUT |
  TURN_START |
  TURN_TIMER_SLUSH |
  PREMIUM |
  GOLD_REWARD_STATE |
  PLAYSTATE |
  LAST_AFFECTED_BY |
  STEP |
  TURN |
  FATIGUE |
  CURRENT_PLAYER |
  FIRST_PLAYER |
  RESOURCES_USED |
  RESOURCES |
  HERO_ENTITY |
  MAXHANDSIZE |
  STARTHANDSIZE |
  PLAYER_ID |
  TEAM_ID |
  TRIGGER_VISUAL |
  RECENTLY_ARRIVED |
  PROTECTED |
  PROTECTING |
  DEFENDING |
  PROPOSED_DEFENDER |
  ATTACKING |
  PROPOSED_ATTACKER |
  ATTACHED |
  EXHAUSTED |
  DAMAGE |
  HEALTH |
  ATK |
  COST |
  ZONE |
  CONTROLLER |
  OWNER |
  DEFINITION |
  ENTITY_ID |
  HISTORY_PROXY |
  ELITE |
  MAXRESOURCES |
  CARD_SET |
  CARDTEXT |
  DURABILITY |
  SILENCED |
  WINDFURY |
  TAUNT |
  STEALTH |
  SPELLPOWER |
  DIVINE_SHIELD |
  CHARGE |
  NEXT_STEP |
  CLASS |
  CARDRACE |
  FACTION |
  CARDTYPE |
  RARITY |
  STATE |
  SUMMONED |
  FREEZE |
  ENRAGED |
  OVERLOAD |
  LOYALTY |
  DEATHRATTLE |
  BATTLECRY |
  SECRET |
  COMBO |
  CANT_HEAL |
  CANT_DAMAGE |
  CANT_SET_ASIDE |
  CANT_REMOVE_FROM_GAME |
  CANT_READY |
  CANT_ATTACK |
  CANT_DISCARD |
  CANT_PLAY |
  CANT_DRAW |
  CANT_BE_HEALED |
  IMMUNE |
  CANT_BE_SET_ASIDE |
  CANT_BE_REMOVED_FROM_GAME |
  CANT_BE_READIED |
  CANT_BE_ATTACKED |
  CANT_BE_TARGETED |
  CANT_BE_DESTROYED |
  CANT_BE_SUMMONING_SICK |
  FROZEN |
  JUST_PLAYED |
  LINKED_ENTITY |
  ZONE_POSITION |
  CANT_BE_FROZEN |
  COMBO_ACTIVE |
  CARD_TARGET |
  NUM_CARDS_PLAYED_THIS_TURN |
  CANT_BE_TARGETED_BY_OPPONENTS |
  NUM_TURNS_IN_PLAY |
  NUM_TURNS_LEFT |
  CURRENT_SPELLPOWER |
  ARMOR |
  MORPH |
  IS_MORPHED |
  TEMP_RESOURCES |
  OVERLOAD_OWED |
  NUM_ATTACKS_THIS_TURN |
  NEXT_ALLY_BUFF |
  MAGNET |
  FIRST_CARD_PLAYED_THIS_TURN |
  MULLIGAN_STATE |
  TAUNT_READY |
  STEALTH_READY |
  CHARGE_READY |
  CANT_BE_TARGETED_BY_SPELLS |
  SHOULDEXITCOMBAT |
  CREATOR |
  CANT_BE_SILENCED |
  PARENT_CARD |
  NUM_MINIONS_PLAYED_THIS_TURN |
  PREDAMAGE |
  COLLECTIBLE |
  DATABASE_ID |
  ENCHANTMENT_BIRTH_VISUAL |
  ENCHANTMENT_IDLE_VISUAL |
  CANT_BE_TARGETED_BY_HERO_POWERS |
  HEALTH_MINIMUM |
  TAG_ONE_TURN_EFFECT |
  SILENCE |
  COUNTER |
  ZONES_REVEALED |
  ADJACENT_BUFF |
  FORCED_PLAY |
  LOW_HEALTH_THRESHOLD |
  SPELLPOWER_DOUBLE |
  SPELL_HEALING_DOUBLE |
  NUM_OPTIONS_PLAYED_THIS_TURN |
  TO_BE_DESTROYED |
  AURA |
  POISONOUS |
  HERO_POWER_DOUBLE |
  AI_MUST_PLAY |
  NUM_MINIONS_PLAYER_KILLED_THIS_TURN |
  NUM_MINIONS_KILLED_THIS_TURN |
  AFFECTED_BY_SPELL_POWER |
  EXTRA_DEATHRATTLES |
  START_WITH_1_HEALTH |
  IMMUNE_WHILE_ATTACKING |
  MULTIPLY_HERO_DAMAGE |
  MULTIPLY_BUFF_VALUE |
  CUSTOM_KEYWORD_EFFECT |
  TOPDECK |
  CANT_BE_TARGETED_BY_BATTLECRIES |
  HERO_POWER |
  DEATHRATTLE_RETURN_ZONE |
  STEADY_SHOT_CAN_TARGET |
  DISPLAYED_CREATOR |
  POWERED_UP |
  SPARE_PART |
  FORGETFUL |
  CAN_SUMMON_MAXPLUSONE_MINION |
  OBFUSCATED |
  BURNING |
  OVERLOAD_LOCKED |
  NUM_TIMES_HERO_POWER_USED_THIS_GAME |
  CURRENT_HEROPOWER_DAMAGE_BONUS |
  HEROPOWER_DAMAGE |
  LAST_CARD_PLAYED |
  NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_TURN |
  NUM_CARDS_DRAWN_THIS_TURN |
  AI_ONE_SHOT_KILL |
  EVIL_GLOW |
  HIDE_STATS |
  INSPIRE |
  RECEIVES_DOUBLE_SPELLDAMAGE_BONUS |
  HEROPOWER_ADDITIONAL_ACTIVATIONS |
  HEROPOWER_ACTIVATIONS_THIS_TURN |
  REVEALED |
  NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_GAME |
  CANNOT_ATTACK_HEROES |
  LOCK_AND_LOAD |
  DISCOVER |
  SHADOWFORM |
  NUM_FRIENDLY_MINIONS_THAT_ATTACKED_THIS_TURN |
  NUM_RESOURCES_SPENT_THIS_GAME |
  CHOOSE_BOTH |
  ELECTRIC_CHARGE_LEVEL |
  HEAVILY_ARMORED |
  DONT_SHOW_IMMUNE |
  RITUAL |
  PREHEALING |
  APPEAR_FUNCTIONALLY_DEAD |
  OVERLOAD_THIS_GAME |
  SPELLS_COST_HEALTH |
  HISTORY_PROXY_NO_BIG_CARD |
  PROXY_CTHUN |
  TRANSFORMED_FROM_CARD |
  CTHUN |
  CAST_RANDOM_SPELLS |
  SHIFTING |
  JADE_GOLEM |
  EMBRACE_THE_SHADOW |
  CHOOSE_ONE |
  EXTRA_ATTACKS_THIS_TURN |
  SEEN_CTHUN |
  MINION_TYPE_REFERENCE |
  UNTOUCHABLE |
  RED_MANA_CRYSTALS |
  SCORE_LABELID_1 |
  SCORE_VALUE_1 |
  SCORE_LABELID_2 |
  SCORE_LABELID_3 |
  SCORE_VALUE_2 |
  SCORE_VALUE_3 |
  CANT_BE_FATIGUED |
  AUTOATTACK |
  ARMS_DEALING |
  QUEST |
  TAG_LAST_KNOWN_COST_IN_HAND |
  DEFINING_ENCHANTMENT |
  FINISH_ATTACK_SPELL_ON_DAMAGE |
  MODULAR_ENTITY_PART_1 |
  MODULAR_ENTITY_PART_2 |
  MODIFY_DEFINITION_ATTACK |
  MODIFY_DEFINITION_HEALTH |
  MODIFY_DEFINITION_COST |
  MULTIPLE_CLASSES |
  ALL_TARGETS_RANDOM |
  MULTI_CLASS_GROUP |
  CARD_COSTS_HEALTH |
  GRIMY_GOONS |
  JADE_LOTUS |
  KABAL |
  ADDITIONAL_PLAY_REQS_1 |
  ADDITIONAL_PLAY_REQS_2 |
  ELEMENTAL_POWERED_UP |
  QUEST_PROGRESS |
  QUEST_PROGRESS_TOTAL |
  QUEST_CONTRIBUTOR |
  ADAPT |
  IS_CURRENT_TURN_AN_EXTRA_TURN |
  EXTRA_TURNS_TAKEN_THIS_GAME |
  TREASURE |
  TREASURE_DEFINTIONAL_ATTACK |
  TREASURE_DEFINTIONAL_COST |
  TREASURE_DEFINTIONAL_HEALTH |
  ACTS_LIKE_A_SPELL |
  SHIFTING_MINION |
  SHIFTING_WEAPON |
  DEATH_KNIGHT |
  BOSS |
  STAMPEDE |
  EMPOWERED_TREASURE |
  ONE_SIDED_GHOSTLY |
  CURRENT_NEGATIVE_SPELLPOWER |
  IS_VAMPIRE |
  CORRUPTED |
  HIDE_HEALTH |
  HIDE_ATTACK |
  HIDE_COST |
  LIFESTEAL |
  OVERRIDE_EMOTE_0 |
  OVERRIDE_EMOTE_1 |
  OVERRIDE_EMOTE_2 |
  OVERRIDE_EMOTE_3 |
  OVERRIDE_EMOTE_4 |
  OVERRIDE_EMOTE_5 |
  SCORE_FOOTERID |
  RECRUIT |
  LOOT_CARD_1 |
  LOOT_CARD_2 |
  LOOT_CARD_3 |
  HERO_POWER_DISABLED |
  VALEERASHADOW |
  OVERRIDECARDNAME |
  OVERRIDECARDTEXTBUILDER |
  DUNGEON_PASSIVE_BUFF |
  GHOSTLY |
  DISGUISED_TWIN |
  SECRET_DEATHRATTLE |
  RUSH |
  REVEAL_CHOICES |
  HIDDEN_CHOICE |
  ZOMBEAST |
  HERO_EMOTE_SILENCED |
  MINION_IN_HAND_BUFF |
  ECHO |
  MODULAR |
  IGNORE_HIDE_STATS_FOR_BIG_CARD |
  REAL_TIME_TRANSFORM |
  WAIT_FOR_PLAYER_RECONNECT_PERIOD |
  PHASED_RESTART |
  HEALTH_DISPLAY |
  ENABLE_HEALTH_DISPLAY |
  VOODOO_LINK |
  ATTACKABLE_BY_RUSH |
  SHIFTING_SPELL |
  USE_ALTERNATE_CARD_TEXT |
  SUPPRESS_DEATH_SOUND |
  ECHOING_OOZE_SPELL |
  COLLECTIONMANAGER_FILTER_MANA_EVEN |
  COLLECTIONMANAGER_FILTER_MANA_ODD |
  ZOMBEAST_DEBUG_CURRENT_BEAST_DATABASE_ID |
  ZOMBEAST_DEBUG_CURRENT_ITERATION |
  ZOMBEAST_DEBUG_MAX_ITERATIONS |
  START_OF_GAME |
  ENCHANTMENT_INVISIBLE |
  PUZZLE |
  PUZZLE_PROGRESS |
  PUZZLE_PROGRESS_TOTAL |
  PUZZLE_TYPE |
  PUZZLE_COMPLETED |
  CONCEDE_BUTTON_ALTERNATIVE_TEXT |
  HIDE_RESTART_BUTTON |
  WILD |
  HALL_OF_FAME |
  DECK_RULE_MOD_DECK_SIZE |
  FAST_BATTLECRY |
  END_TURN_BUTTON_ALTERNATIVE_APPEARANCE |
  TREAT_AS_PLAYED_HERO_CARD |
  PUZZLE_NAME |
  TURN_INDICATOR_ALTERNATIVE_APPEARANCE |
  PREVIOUS_PUZZLE_COMPLETED |
  GLORIOUSGLOOP |
  HEALTH_DISPLAY_COLOR |
  HEALTH_DISPLAY_NEGATIVE |
  WHIZBANG_DECK_ID |
  HIDE_OUT_OF_CARDS_WARNING |
  GEARS |
  LUNAHIGHLIGHTHINT |
  SUPPRESS_JOBS_DONE_VO |
  ALL_HEALING_DOUBLE |
  BLOCK_ALL_INPUT |
  PUZZLE_MODE |
  InvisibleDeathrattle |
  ImmuneToSpellpower |
  AttackVisualType |
  DevState |
  GrantCharge |
  HealTarget |
  UnknownTag Int
  deriving (Show, Eq, Generic, Hashable)

tags :: [(Tag,Int)]
tags = 
  [ (TAG_SCRIPT_DATA_NUM_1,2)
  , (TAG_SCRIPT_DATA_NUM_2,3)
  , (TAG_SCRIPT_DATA_ENT_1,4)
  , (TAG_SCRIPT_DATA_ENT_2,5)
  , (MISSION_EVENT,6)
  , (TIMEOUT,7)
  , (TURN_START,8)
  , (TURN_TIMER_SLUSH,9)
  , (PREMIUM,12)
  , (GOLD_REWARD_STATE,13)
  , (PLAYSTATE,17)
  , (LAST_AFFECTED_BY,18)
  , (STEP,19)
  , (TURN,20)
  , (FATIGUE,22)
  , (CURRENT_PLAYER,23)
  , (FIRST_PLAYER,24)
  , (RESOURCES_USED,25)
  , (RESOURCES,26)
  , (HERO_ENTITY,27)
  , (MAXHANDSIZE,28)
  , (STARTHANDSIZE,29)
  , (PLAYER_ID,30)
  , (TEAM_ID,31)
  , (TRIGGER_VISUAL,32)
  , (RECENTLY_ARRIVED,33)
  , (PROTECTED,34)
  , (PROTECTING,35)
  , (DEFENDING,36)
  , (PROPOSED_DEFENDER,37)
  , (ATTACKING,38)
  , (PROPOSED_ATTACKER,39)
  , (ATTACHED,40)
  , (EXHAUSTED,43)
  , (DAMAGE,44)
  , (HEALTH,45)
  , (ATK,47)
  , (COST,48)
  , (ZONE,49)
  , (CONTROLLER,50)
  , (OWNER,51)
  , (DEFINITION,52)
  , (ENTITY_ID,53)
  , (HISTORY_PROXY,54)
  , (ELITE,114)
  , (MAXRESOURCES,176)
  , (CARD_SET,183)
  , (CARDTEXT,184)
  , (DURABILITY,187)
  , (SILENCED,188)
  , (WINDFURY,189)
  , (TAUNT,190)
  , (STEALTH,191)
  , (SPELLPOWER,192)
  , (DIVINE_SHIELD,194)
  , (CHARGE,197)
  , (NEXT_STEP,198)
  , (CLASS,199)
  , (CARDRACE,200)
  , (FACTION,201)
  , (CARDTYPE,202)
  , (RARITY,203)
  , (STATE,204)
  , (SUMMONED,205)
  , (FREEZE,208)
  , (ENRAGED,212)
  , (OVERLOAD,215)
  , (LOYALTY,216)
  , (DEATHRATTLE,217)
  , (BATTLECRY,218)
  , (SECRET,219)
  , (COMBO,220)
  , (CANT_HEAL,221)
  , (CANT_DAMAGE,222)
  , (CANT_SET_ASIDE,223)
  , (CANT_REMOVE_FROM_GAME,224)
  , (CANT_READY,225)
  , (CANT_ATTACK,227)
  , (CANT_DISCARD,230)
  , (CANT_PLAY,231)
  , (CANT_DRAW,232)
  , (CANT_BE_HEALED,239)
  , (IMMUNE,240)
  , (CANT_BE_SET_ASIDE,241)
  , (CANT_BE_REMOVED_FROM_GAME,242)
  , (CANT_BE_READIED,243)
  , (CANT_BE_ATTACKED,245)
  , (CANT_BE_TARGETED,246)
  , (CANT_BE_DESTROYED,247)
  , (CANT_BE_SUMMONING_SICK,253)
  , (FROZEN,260)
  , (JUST_PLAYED,261)
  , (LINKED_ENTITY,262)
  , (ZONE_POSITION,263)
  , (CANT_BE_FROZEN,264)
  , (COMBO_ACTIVE,266)
  , (CARD_TARGET,267)
  , (NUM_CARDS_PLAYED_THIS_TURN,269)
  , (CANT_BE_TARGETED_BY_OPPONENTS,270)
  , (NUM_TURNS_IN_PLAY,271)
  , (NUM_TURNS_LEFT,272)
  , (CURRENT_SPELLPOWER,291)
  , (ARMOR,292)
  , (MORPH,293)
  , (IS_MORPHED,294)
  , (TEMP_RESOURCES,295)
  , (OVERLOAD_OWED,296)
  , (NUM_ATTACKS_THIS_TURN,297)
  , (NEXT_ALLY_BUFF,302)
  , (MAGNET,303)
  , (FIRST_CARD_PLAYED_THIS_TURN,304)
  , (MULLIGAN_STATE,305)
  , (TAUNT_READY,306)
  , (STEALTH_READY,307)
  , (CHARGE_READY,308)
  , (CANT_BE_TARGETED_BY_SPELLS,311)
  , (SHOULDEXITCOMBAT,312)
  , (CREATOR,313)
  , (CANT_BE_SILENCED,314)
  , (PARENT_CARD,316)
  , (NUM_MINIONS_PLAYED_THIS_TURN,317)
  , (PREDAMAGE,318)
  , (COLLECTIBLE,321)
  , (DATABASE_ID,327)
  , (ENCHANTMENT_BIRTH_VISUAL,330)
  , (ENCHANTMENT_IDLE_VISUAL,331)
  , (CANT_BE_TARGETED_BY_HERO_POWERS,332)
  , (HEALTH_MINIMUM,337)
  , (TAG_ONE_TURN_EFFECT,338)
  , (SILENCE,339)
  , (COUNTER,340)
  , (ZONES_REVEALED,348)
  , (ADJACENT_BUFF,350)
  , (FORCED_PLAY,352)
  , (LOW_HEALTH_THRESHOLD,353)
  , (SPELLPOWER_DOUBLE,356)
  , (SPELL_HEALING_DOUBLE,357)
  , (NUM_OPTIONS_PLAYED_THIS_TURN,358)
  , (TO_BE_DESTROYED,360)
  , (AURA,362)
  , (POISONOUS,363)
  , (HERO_POWER_DOUBLE,366)
  , (AI_MUST_PLAY,367)
  , (NUM_MINIONS_PLAYER_KILLED_THIS_TURN,368)
  , (NUM_MINIONS_KILLED_THIS_TURN,369)
  , (AFFECTED_BY_SPELL_POWER,370)
  , (EXTRA_DEATHRATTLES,371)
  , (START_WITH_1_HEALTH,372)
  , (IMMUNE_WHILE_ATTACKING,373)
  , (MULTIPLY_HERO_DAMAGE,374)
  , (MULTIPLY_BUFF_VALUE,375)
  , (CUSTOM_KEYWORD_EFFECT,376)
  , (TOPDECK,377)
  , (CANT_BE_TARGETED_BY_BATTLECRIES,379)
  , (HERO_POWER,380)
  , (DEATHRATTLE_RETURN_ZONE,382)
  , (STEADY_SHOT_CAN_TARGET,383)
  , (DISPLAYED_CREATOR,385)
  , (POWERED_UP,386)
  , (SPARE_PART,388)
  , (FORGETFUL,389)
  , (CAN_SUMMON_MAXPLUSONE_MINION,390)
  , (OBFUSCATED,391)
  , (BURNING,392)
  , (OVERLOAD_LOCKED,393)
  , (NUM_TIMES_HERO_POWER_USED_THIS_GAME,394)
  , (CURRENT_HEROPOWER_DAMAGE_BONUS,395)
  , (HEROPOWER_DAMAGE,396)
  , (LAST_CARD_PLAYED,397)
  , (NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_TURN,398)
  , (NUM_CARDS_DRAWN_THIS_TURN,399)
  , (AI_ONE_SHOT_KILL,400)
  , (EVIL_GLOW,401)
  , (HIDE_STATS,402)
  , (INSPIRE,403)
  , (RECEIVES_DOUBLE_SPELLDAMAGE_BONUS,404)
  , (HEROPOWER_ADDITIONAL_ACTIVATIONS,405)
  , (HEROPOWER_ACTIVATIONS_THIS_TURN,406)
  , (REVEALED,410)
  , (NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_GAME,412)
  , (CANNOT_ATTACK_HEROES,413)
  , (LOCK_AND_LOAD,414)
  , (DISCOVER,415)
  , (SHADOWFORM,416)
  , (NUM_FRIENDLY_MINIONS_THAT_ATTACKED_THIS_TURN,417)
  , (NUM_RESOURCES_SPENT_THIS_GAME,418)
  , (CHOOSE_BOTH,419)
  , (ELECTRIC_CHARGE_LEVEL,420)
  , (HEAVILY_ARMORED,421)
  , (DONT_SHOW_IMMUNE,422)
  , (RITUAL,424)
  , (PREHEALING,425)
  , (APPEAR_FUNCTIONALLY_DEAD,426)
  , (OVERLOAD_THIS_GAME,427)
  , (SPELLS_COST_HEALTH,431)
  , (HISTORY_PROXY_NO_BIG_CARD,432)
  , (PROXY_CTHUN,434)
  , (TRANSFORMED_FROM_CARD,435)
  , (CTHUN,436)
  , (CAST_RANDOM_SPELLS,437)
  , (SHIFTING,438)
  , (JADE_GOLEM,441)
  , (EMBRACE_THE_SHADOW,442)
  , (CHOOSE_ONE,443)
  , (EXTRA_ATTACKS_THIS_TURN,444)
  , (SEEN_CTHUN,445)
  , (MINION_TYPE_REFERENCE,447)
  , (UNTOUCHABLE,448)
  , (RED_MANA_CRYSTALS,449)
  , (SCORE_LABELID_1,450)
  , (SCORE_VALUE_1,451)
  , (SCORE_LABELID_2,452)
  , (SCORE_LABELID_3,454)
  , (SCORE_VALUE_2,453)
  , (SCORE_VALUE_3,455)
  , (CANT_BE_FATIGUED,456)
  , (AUTOATTACK,457)
  , (ARMS_DEALING,458)
  , (QUEST,462)
  , (TAG_LAST_KNOWN_COST_IN_HAND,466)
  , (DEFINING_ENCHANTMENT,469)
  , (FINISH_ATTACK_SPELL_ON_DAMAGE,470)
  , (MODULAR_ENTITY_PART_1,471)
  , (MODULAR_ENTITY_PART_2,472)
  , (MODIFY_DEFINITION_ATTACK,473)
  , (MODIFY_DEFINITION_HEALTH,474)
  , (MODIFY_DEFINITION_COST,475)
  , (MULTIPLE_CLASSES,476)
  , (ALL_TARGETS_RANDOM,477)
  , (MULTI_CLASS_GROUP,480)
  , (CARD_COSTS_HEALTH,481)
  , (GRIMY_GOONS,482)
  , (JADE_LOTUS,483)
  , (KABAL,484)
  , (ADDITIONAL_PLAY_REQS_1,515)
  , (ADDITIONAL_PLAY_REQS_2,516)
  , (ELEMENTAL_POWERED_UP,532)
  , (QUEST_PROGRESS,534)
  , (QUEST_PROGRESS_TOTAL,535)
  , (QUEST_CONTRIBUTOR,541)
  , (ADAPT,546)
  , (IS_CURRENT_TURN_AN_EXTRA_TURN,547)
  , (EXTRA_TURNS_TAKEN_THIS_GAME,548)
  , (TREASURE,557)
  , (TREASURE_DEFINTIONAL_ATTACK,558)
  , (TREASURE_DEFINTIONAL_COST,559)
  , (TREASURE_DEFINTIONAL_HEALTH,560)
  , (ACTS_LIKE_A_SPELL,561)
  , (SHIFTING_MINION,549)
  , (SHIFTING_WEAPON,550)
  , (DEATH_KNIGHT,554)
  , (BOSS,556)
  , (STAMPEDE,564)
  , (EMPOWERED_TREASURE,646)
  , (ONE_SIDED_GHOSTLY,648)
  , (CURRENT_NEGATIVE_SPELLPOWER,651)
  , (IS_VAMPIRE,680)
  , (CORRUPTED,681)
  , (HIDE_HEALTH,682)
  , (HIDE_ATTACK,683)
  , (HIDE_COST,684)
  , (LIFESTEAL,685)
  , (OVERRIDE_EMOTE_0,740)
  , (OVERRIDE_EMOTE_1,741)
  , (OVERRIDE_EMOTE_2,742)
  , (OVERRIDE_EMOTE_3,743)
  , (OVERRIDE_EMOTE_4,744)
  , (OVERRIDE_EMOTE_5,745)
  , (SCORE_FOOTERID,751)
  , (RECRUIT,763)
  , (LOOT_CARD_1,764)
  , (LOOT_CARD_2,765)
  , (LOOT_CARD_3,766)
  , (HERO_POWER_DISABLED,777)
  , (VALEERASHADOW,779)
  , (OVERRIDECARDNAME,781)
  , (OVERRIDECARDTEXTBUILDER,782)
  , (DUNGEON_PASSIVE_BUFF,783)
  , (GHOSTLY,785)
  , (DISGUISED_TWIN,788)
  , (SECRET_DEATHRATTLE,789)
  , (RUSH,791)
  , (REVEAL_CHOICES,792)
  , (HIDDEN_CHOICE,813)
  , (ZOMBEAST,823)
  , (HERO_EMOTE_SILENCED,832)
  , (MINION_IN_HAND_BUFF,845)
  , (ECHO,846)
  , (MODULAR,849)
  , (IGNORE_HIDE_STATS_FOR_BIG_CARD,857)
  , (REAL_TIME_TRANSFORM,859)
  , (WAIT_FOR_PLAYER_RECONNECT_PERIOD,860)
  , (PHASED_RESTART,888)
  , (HEALTH_DISPLAY,917)
  , (ENABLE_HEALTH_DISPLAY,920)
  , (VOODOO_LINK,921)
  , (ATTACKABLE_BY_RUSH,930)
  , (SHIFTING_SPELL,936)
  , (USE_ALTERNATE_CARD_TEXT,955)
  , (SUPPRESS_DEATH_SOUND,959)
  , (ECHOING_OOZE_SPELL,963)
  , (COLLECTIONMANAGER_FILTER_MANA_EVEN,956)
  , (COLLECTIONMANAGER_FILTER_MANA_ODD,957)
  , (ZOMBEAST_DEBUG_CURRENT_BEAST_DATABASE_ID,964)
  , (ZOMBEAST_DEBUG_CURRENT_ITERATION,965)
  , (ZOMBEAST_DEBUG_MAX_ITERATIONS,966)
  , (START_OF_GAME,968)
  , (ENCHANTMENT_INVISIBLE,976)
  , (PUZZLE,979)
  , (PUZZLE_PROGRESS,980)
  , (PUZZLE_PROGRESS_TOTAL,981)
  , (PUZZLE_TYPE,982)
  , (PUZZLE_COMPLETED,984)
  , (CONCEDE_BUTTON_ALTERNATIVE_TEXT,985)
  , (HIDE_RESTART_BUTTON,990)
  , (WILD,991)
  , (HALL_OF_FAME,992)
  , (DECK_RULE_MOD_DECK_SIZE,997)
  , (FAST_BATTLECRY,998)
  , (END_TURN_BUTTON_ALTERNATIVE_APPEARANCE,1000)
  , (TREAT_AS_PLAYED_HERO_CARD,1016)
  , (PUZZLE_NAME,1026)
  , (TURN_INDICATOR_ALTERNATIVE_APPEARANCE,1027)
  , (PREVIOUS_PUZZLE_COMPLETED,1042)
  , (GLORIOUSGLOOP,1044)
  , (HEALTH_DISPLAY_COLOR,1046)
  , (HEALTH_DISPLAY_NEGATIVE,1047)
  , (WHIZBANG_DECK_ID,1048)
  , (HIDE_OUT_OF_CARDS_WARNING,1050)
  , (GEARS,1052)
  , (LUNAHIGHLIGHTHINT,1054)
  , (SUPPRESS_JOBS_DONE_VO,1055)
  , (ALL_HEALING_DOUBLE,1058)
  , (BLOCK_ALL_INPUT,1071)
  , (PUZZLE_MODE,1073)
  , (InvisibleDeathrattle,335)
  , (ImmuneToSpellpower,349)
  , (AttackVisualType,251)
  , (DevState,268)
  , (GrantCharge,355)
  , (HealTarget,361)  
  ]

tag :: Iso' Tag Int
tag = twoWays tags (const 0) UnknownTag

-- * CardReq
data CardReq = 
  REQ_MINION_TARGET |
  REQ_FRIENDLY_TARGET |
  REQ_ENEMY_TARGET |
  REQ_DAMAGED_TARGET |
  REQ_MAX_SECRETS |
  REQ_FROZEN_TARGET |
  REQ_CHARGE_TARGET |
  REQ_TARGET_MAX_ATTACK |
  REQ_NONSELF_TARGET |
  REQ_TARGET_WITH_RACE |
  REQ_TARGET_TO_PLAY |
  REQ_NUM_MINION_SLOTS |
  REQ_WEAPON_EQUIPPED |
  REQ_ENOUGH_MANA |
  REQ_YOUR_TURN |
  REQ_NONSTEALTH_ENEMY_TARGET |
  REQ_HERO_TARGET |
  REQ_SECRET_ZONE_CAP |
  REQ_MINION_CAP_IF_TARGET_AVAILABLE |
  REQ_MINION_CAP |
  REQ_TARGET_ATTACKED_THIS_TURN |
  REQ_TARGET_IF_AVAILABLE |
  REQ_MINIMUM_ENEMY_MINIONS |
  REQ_TARGET_FOR_COMBO |
  REQ_NOT_EXHAUSTED_ACTIVATE |
  REQ_UNIQUE_SECRET_OR_QUEST |
  REQ_TARGET_TAUNTER |
  REQ_CAN_BE_ATTACKED |
  REQ_ACTION_PWR_IS_MASTER_PWR |
  REQ_TARGET_MAGNET |
  REQ_ATTACK_GREATER_THAN_0 |
  REQ_ATTACKER_NOT_FROZEN |
  REQ_HERO_OR_MINION_TARGET |
  REQ_CAN_BE_TARGETED_BY_SPELLS |
  REQ_SUBCARD_IS_PLAYABLE |
  REQ_TARGET_FOR_NO_COMBO |
  REQ_NOT_MINION_JUST_PLAYED |
  REQ_NOT_EXHAUSTED_HERO_POWER |
  REQ_CAN_BE_TARGETED_BY_OPPONENTS |
  REQ_ATTACKER_CAN_ATTACK |
  REQ_TARGET_MIN_ATTACK |
  REQ_CAN_BE_TARGETED_BY_HERO_POWERS |
  REQ_ENEMY_TARGET_NOT_IMMUNE |
  REQ_ENTIRE_ENTOURAGE_NOT_IN_PLAY |
  REQ_MINIMUM_TOTAL_MINIONS |
  REQ_MUST_TARGET_TAUNTER |
  REQ_UNDAMAGED_TARGET |
  REQ_CAN_BE_TARGETED_BY_BATTLECRIES |
  REQ_STEADY_SHOT |
  REQ_MINION_OR_ENEMY_HERO |
  REQ_TARGET_IF_AVAILABLE_AND_DRAGON_IN_HAND |
  REQ_LEGENDARY_TARGET |
  REQ_FRIENDLY_MINION_DIED_THIS_TURN |
  REQ_FRIENDLY_MINION_DIED_THIS_GAME |
  REQ_ENEMY_WEAPON_EQUIPPED |
  REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_MINIONS |
  REQ_TARGET_WITH_BATTLECRY |
  REQ_TARGET_WITH_DEATHRATTLE |
  REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_SECRETS |
  REQ_SECRET_ZONE_CAP_FOR_NON_SECRET |
  REQ_TARGET_EXACT_COST |
  REQ_STEALTHED_TARGET |
  REQ_MINION_SLOT_OR_MANA_CRYSTAL_SLOT |
  REQ_MAX_QUESTS |
  REQ_TARGET_IF_AVAILABE_AND_ELEMENTAL_PLAYED_LAST_TURN |
  REQ_TARGET_NOT_VAMPIRE |
  REQ_TARGET_NOT_DAMAGEABLE_ONLY_BY_WEAPONS |
  REQ_NOT_DISABLED_HERO_POWER |
  REQ_MUST_PLAY_OTHER_CARD_FIRST |
  REQ_HAND_NOT_FULL |
  REQ_TARGET_IF_AVAILABLE_AND_NO_3_COST_CARD_IN_DECK |
  REQ_CAN_BE_TARGETED_BY_COMBOS |
  REQ_CANNOT_PLAY_THIS |
  REQ_FRIENDLY_MINIONS_OF_RACE_DIED_THIS_GAME |
  REQ_DRAG_TO_PLAY |
  REQ_OPPONENT_PLAYED_CARDS_THIS_GAME |
  UnknownCardReq Int
  deriving (Eq, Show, Generic, Hashable)

reqs :: [(CardReq,Int)]
reqs =
  [ (REQ_MINION_TARGET,1)
  , (REQ_FRIENDLY_TARGET,2)
  , (REQ_ENEMY_TARGET,3)
  , (REQ_DAMAGED_TARGET,4)
  , (REQ_MAX_SECRETS,5)
  , (REQ_FROZEN_TARGET,6)
  , (REQ_CHARGE_TARGET,7)
  , (REQ_TARGET_MAX_ATTACK,8)
  , (REQ_NONSELF_TARGET,9)
  , (REQ_TARGET_WITH_RACE,10)
  , (REQ_TARGET_TO_PLAY,11)
  , (REQ_NUM_MINION_SLOTS,12)
  , (REQ_WEAPON_EQUIPPED,13)
  , (REQ_ENOUGH_MANA,14)
  , (REQ_YOUR_TURN,15)
  , (REQ_NONSTEALTH_ENEMY_TARGET,16)
  , (REQ_HERO_TARGET,17)
  , (REQ_SECRET_ZONE_CAP,18)
  , (REQ_MINION_CAP_IF_TARGET_AVAILABLE,19)
  , (REQ_MINION_CAP,20)
  , (REQ_TARGET_ATTACKED_THIS_TURN,21)
  , (REQ_TARGET_IF_AVAILABLE,22)
  , (REQ_MINIMUM_ENEMY_MINIONS,23)
  , (REQ_TARGET_FOR_COMBO,24)
  , (REQ_NOT_EXHAUSTED_ACTIVATE,25)
  , (REQ_UNIQUE_SECRET_OR_QUEST,26)
  , (REQ_TARGET_TAUNTER,27)
  , (REQ_CAN_BE_ATTACKED,28)
  , (REQ_ACTION_PWR_IS_MASTER_PWR,29)
  , (REQ_TARGET_MAGNET,30)
  , (REQ_ATTACK_GREATER_THAN_0,31)
  , (REQ_ATTACKER_NOT_FROZEN,32)
  , (REQ_HERO_OR_MINION_TARGET,33)
  , (REQ_CAN_BE_TARGETED_BY_SPELLS,34)
  , (REQ_SUBCARD_IS_PLAYABLE,35)
  , (REQ_TARGET_FOR_NO_COMBO,36)
  , (REQ_NOT_MINION_JUST_PLAYED,37)
  , (REQ_NOT_EXHAUSTED_HERO_POWER,38)
  , (REQ_CAN_BE_TARGETED_BY_OPPONENTS,39)
  , (REQ_ATTACKER_CAN_ATTACK,40)
  , (REQ_TARGET_MIN_ATTACK,41)
  , (REQ_CAN_BE_TARGETED_BY_HERO_POWERS,42)
  , (REQ_ENEMY_TARGET_NOT_IMMUNE,43)
  , (REQ_ENTIRE_ENTOURAGE_NOT_IN_PLAY,44)
  , (REQ_MINIMUM_TOTAL_MINIONS,45)
  , (REQ_MUST_TARGET_TAUNTER,46)
  , (REQ_UNDAMAGED_TARGET,47)
  , (REQ_CAN_BE_TARGETED_BY_BATTLECRIES,48)
  , (REQ_STEADY_SHOT,49)
  , (REQ_MINION_OR_ENEMY_HERO,50)
  , (REQ_TARGET_IF_AVAILABLE_AND_DRAGON_IN_HAND,51)
  , (REQ_LEGENDARY_TARGET,52)
  , (REQ_FRIENDLY_MINION_DIED_THIS_TURN,53)
  , (REQ_FRIENDLY_MINION_DIED_THIS_GAME,54)
  , (REQ_ENEMY_WEAPON_EQUIPPED,55)
  , (REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_MINIONS,56)
  , (REQ_TARGET_WITH_BATTLECRY,57)
  , (REQ_TARGET_WITH_DEATHRATTLE,58)
  , (REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_SECRETS,59)
  , (REQ_SECRET_ZONE_CAP_FOR_NON_SECRET,60)
  , (REQ_TARGET_EXACT_COST,61)
  , (REQ_STEALTHED_TARGET,62)
  , (REQ_MINION_SLOT_OR_MANA_CRYSTAL_SLOT,63)
  , (REQ_MAX_QUESTS,64)
  , (REQ_TARGET_IF_AVAILABE_AND_ELEMENTAL_PLAYED_LAST_TURN,65)
  , (REQ_TARGET_NOT_VAMPIRE,66)
  , (REQ_TARGET_NOT_DAMAGEABLE_ONLY_BY_WEAPONS,67)
  , (REQ_NOT_DISABLED_HERO_POWER,68)
  , (REQ_MUST_PLAY_OTHER_CARD_FIRST,69)
  , (REQ_HAND_NOT_FULL,70)
  , (REQ_TARGET_IF_AVAILABLE_AND_NO_3_COST_CARD_IN_DECK,71)
  , (REQ_CAN_BE_TARGETED_BY_COMBOS,72)
  , (REQ_CANNOT_PLAY_THIS,73)
  , (REQ_FRIENDLY_MINIONS_OF_RACE_DIED_THIS_GAME,74)
  , (REQ_DRAG_TO_PLAY,75)
  , (REQ_OPPONENT_PLAYED_CARDS_THIS_GAME,77)
  ]

req :: Iso' CardReq Int
req = twoWays reqs (const -1) UnknownCardReq

-- * CardRace
data CardRace = 
  BLOODELF |
  DRAENEI |
  DWARF |
  GNOME |
  GOBLIN |
  HUMAN |
  NIGHTELF |
  ORC |
  TAUREN |
  TROLL |
  UNDEAD |
  WORGEN |
  GOBLIN2 |
  MURLOC |
  DEMON |
  SCOURGE |
  MECHANICAL |
  ELEMENTAL |
  OGRE |
  BEAST |
  TOTEM |
  NERUBIAN |
  PIRATE |
  DRAGON |
  BLANKRace |
  ALL |
  EGG |
  UnknownRace Int
  deriving (Eq, Show, Generic, Hashable)

craces :: [(CardRace,Int)]
craces =
  [ (BLOODELF,1)
  , (DRAENEI,2)
  , (DWARF,3)
  , (GNOME,4)
  , (GOBLIN,5)
  , (HUMAN,6)
  , (NIGHTELF,7)
  , (ORC,8)
  , (TAUREN,9)
  , (TROLL,10)
  , (UNDEAD,11)
  , (WORGEN,12)
  , (GOBLIN2,13)
  , (MURLOC,14)
  , (DEMON,15)
  , (SCOURGE,16)
  , (MECHANICAL,17)
  , (ELEMENTAL,18)
  , (OGRE,19)
  , (BEAST,20)
  , (TOTEM,21)
  , (NERUBIAN,22)
  , (PIRATE,23)
  , (DRAGON,24)
  , (BLANKRace,25)
  , (ALL,26)
  , (EGG,38)
  ]

crace :: Iso' CardRace Int
crace = twoWays craces (const 0) UnknownRace

-- * Rarity
data Rarity =
  COMMON |
  FREE |
  RARE |
  EPIC |
  LEGENDARY |
  UnknownRarity Int
  deriving (Eq, Show, Generic, Hashable)

rarities :: [(Rarity,Int)]
rarities = 
  [ (COMMON,1)
  , (FREE,2)
  , (RARE,3)
  , (EPIC,4)
  , (LEGENDARY,5)
  ]

rarity :: Iso' Rarity Int
rarity = twoWays rarities (const 0) UnknownRarity


-- * Zone
data Zone = 
  PlayZone |
  DeckZone |
  HandZone |
  GraveyardZone |
  RemovedFromGameZone |
  SetasideZone |
  SecretZone |
  UnknownZone Int
  deriving (Eq, Show, Generic, Hashable)

zones :: [(Zone,Int)]
zones =
  [ (PlayZone, 1)
  , (DeckZone, 2)
  , (HandZone, 3)
  , (GraveyardZone, 4)
  , (RemovedFromGameZone, 5)
  , (SetasideZone, 6)
  , (SecretZone, 7)
  ]

zone :: Iso' Zone Int
zone = twoWays zones (const 0) UnknownZone

-- * ChoiceType
data ChoiceType =
  MulliganChoice |
  GeneralChoice |
  UnknownChoice Int
  deriving (Eq, Show, Generic, Hashable)

choiceTypes :: [(ChoiceType,Int)]
choiceTypes =
  [ (MulliganChoice, 1)
  , (GeneralChoice,2)
  ]

choiceType :: Iso' ChoiceType Int
choiceType = twoWays choiceTypes (const 0) UnknownChoice

